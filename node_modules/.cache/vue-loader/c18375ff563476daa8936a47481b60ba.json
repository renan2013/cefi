{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\src\\vuesaxcomponents\\vx-card\\VxCard.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\src\\vuesaxcomponents\\vx-card\\VxCard.vue","mtime":1599860049796},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\css-loader\\dist\\cjs.js","mtime":1599859922776},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1599860014874},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\postcss-loader\\src\\index.js","mtime":1599859971114},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1599859989848},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599859908808},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\vue-loader\\lib\\index.js","mtime":1599860014830}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICJAL2Fzc2V0cy91dGlscy92dWV4eS9jb21wb25lbnRzL3Z4Q2FyZC5zY3NzIjsNCg=="},{"version":3,"sources":["VxCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuVA","file":"VxCard.vue","sourceRoot":"src/vuesaxcomponents/vx-card","sourcesContent":["<!-- =========================================================================================\r\n    File Name: VxCard.vue\r\n    Description: Card Component\r\n    Component Name: VxCard\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n <template>\r\n  <div\r\n    class=\"vx-card\"\r\n    ref=\"card\"\r\n    :class=\"[\r\n        {'overflow-hidden': tempHidden},\r\n        {'no-shadow': noShadow},\r\n        {'rounded-none': noRadius},\r\n        {'card-border': cardBorder},\r\n        cardClasses ]\"\r\n    :style=\"cardStyles\"\r\n    v-on=\"$listeners\"\r\n  >\r\n    <div class=\"vx-card__header\" v-if=\"hasHeader\">\r\n      <!-- card title -->\r\n      <div class=\"vx-card__title\">\r\n        <h4 v-if=\"this.$props.title\" :style=\"titleStyles\" :class=\"titleClasses\">{{ title }}</h4>\r\n        <h6\r\n          v-if=\"this.$props.subtitle\"\r\n          :style=\"subtitleStyles\"\r\n          :class=\"subtitleClasses\"\r\n        >{{ subtitle }}</h6>\r\n      </div>\r\n\r\n      <!-- card actions -->\r\n      <div class=\"vx-card__actions\" v-if=\"hasAction\">\r\n        <slot name=\"actions\">\r\n          <div\r\n            class=\"vx-card__action-buttons\"\r\n            v-if=\"(actionButtons || collapseAction || refreshContentAction || removeCardAction) && !codeToggler\"\r\n          >\r\n            <feather-icon\r\n              @click=\"toggleContent\"\r\n              icon=\"ChevronUpIcon\"\r\n              :class=\"{rotate180: !isContentCollapsed}\"\r\n              class=\"ml-4\"\r\n              v-if=\"actionButtons || collapseAction\"\r\n            />\r\n            <feather-icon\r\n              @click=\"refreshcard\"\r\n              icon=\"RotateCwIcon\"\r\n              class=\"ml-4\"\r\n              v-if=\"actionButtons || refreshContentAction\"\r\n            />\r\n            <feather-icon\r\n              @click=\"removeCard\"\r\n              icon=\"XIcon\"\r\n              class=\"ml-4\"\r\n              v-if=\"actionButtons || removeCardAction\"\r\n            />\r\n          </div>\r\n          <div class=\"vx-card__code-toggler sm:block hidden\" v-if=\"codeToggler && !actionButtons\">\r\n            <feather-icon\r\n              icon=\"CodeIcon\"\r\n              :class=\"{'border border-solid border-primary border-t-0 border-r-0 border-l-0': showCode}\"\r\n              @click=\"toggleCode\"\r\n            ></feather-icon>\r\n          </div>\r\n        </slot>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"vx-card__collapsible-content vs-con-loading__container\"\r\n      ref=\"content\"\r\n      :class=\"[{collapsed: isContentCollapsed}, {'overflow-hidden': tempHidden}]\"\r\n      :style=\"StyleItems\"\r\n    >\r\n      <!-- content with no body(no padding) -->\r\n      <slot name=\"no-body\"></slot>\r\n\r\n      <!-- content inside body(with padding) -->\r\n      <div class=\"vx-card__body\" v-if=\"this.$slots.default\">\r\n        <slot></slot>\r\n      </div>\r\n\r\n      <!-- content with no body(no padding) -->\r\n      <slot name=\"no-body-bottom\"></slot>\r\n\r\n      <div class=\"vx-card__footer\" v-if=\"this.$slots.footer\">\r\n        <slot name=\"footer\"></slot>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"vx-card__code-container\"\r\n      ref=\"codeContainer\"\r\n      v-show=\"this.$slots.codeContainer\"\r\n      :style=\"codeContainerStyles\"\r\n      :class=\"{collapsed: !showCode}\"\r\n    >\r\n      <div class=\"code-content\">\r\n        <prism :language=\"codeLanguage\" :key=\"$vs.rtl\">\r\n          <slot name=\"codeContainer\"></slot>\r\n        </prism>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Prism from \"vue-prism-component\";\r\nimport _color from \"@/assets/utils/color.js\";\r\n\r\nexport default {\r\n  name: \"vx-card\",\r\n  props: {\r\n    title: String,\r\n    subtitle: String,\r\n    actionButtons: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    actionButtonsColor: {\r\n      type: String,\r\n      default: \"success\",\r\n    },\r\n    codeToggler: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    noShadow: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    noRadius: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    cardBorder: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    codeLanguage: {\r\n      default: \"markup\",\r\n      type: String,\r\n    },\r\n    collapseAction: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    refreshContentAction: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    removeCardAction: {\r\n      default: false,\r\n      type: Boolean,\r\n    },\r\n    headerBackground: {\r\n      default: \"\",\r\n      type: String,\r\n    },\r\n    // bodyBackground: {\r\n    //   default: '',\r\n    //   type: String\r\n    // },\r\n    // headerbackground: {\r\n    //   default: '',\r\n    //   type: String\r\n    // },\r\n    cardBackground: {\r\n      default: \"\",\r\n      type: String,\r\n    },\r\n    contentColor: {\r\n      default: \"\",\r\n      type: String,\r\n    },\r\n    titleColor: {\r\n      default: \"\",\r\n      type: String,\r\n    },\r\n    subtitleColor: {\r\n      default: \"#b8c2cc\",\r\n      type: String,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isContentCollapsed: false,\r\n      showCode: false,\r\n      maxHeight: null,\r\n      cardMaxHeight: null,\r\n      codeContainerMaxHeight: \"0px\",\r\n      tempHidden: false,\r\n    };\r\n  },\r\n  computed: {\r\n    hasAction() {\r\n      return (\r\n        this.$slots.actions ||\r\n        this.actionButtons ||\r\n        this.collapseAction ||\r\n        this.refreshContentAction ||\r\n        this.removeCardAction ||\r\n        this.codeToggler\r\n      );\r\n    },\r\n    hasHeader() {\r\n      return this.hasAction || this.title || this.subtitle;\r\n    },\r\n    StyleItems() {\r\n      return { maxHeight: this.maxHeight };\r\n    },\r\n    cardStyles() {\r\n      const obj = { maxHeight: this.cardMaxHeight };\r\n      if (!_color.isColor(this.cardBackground))\r\n        obj.background = _color.getColor(this.cardBackground);\r\n      if (!_color.isColor(this.contentColor))\r\n        obj.color = _color.getColor(this.contentColor);\r\n      return obj;\r\n    },\r\n    codeContainerStyles() {\r\n      return { maxHeight: this.codeContainerMaxHeight };\r\n    },\r\n    cardClasses() {\r\n      let str = \"\";\r\n\r\n      // Add bg class\r\n      if (_color.isColor(this.cardBackground)) {\r\n        str += ` bg-${this.cardBackground}`;\r\n      }\r\n\r\n      // add content color\r\n      if (_color.isColor(this.contentColor)) {\r\n        str += ` text-${this.contentColor}`;\r\n      }\r\n\r\n      return str.trim();\r\n    },\r\n    titleStyles() {\r\n      return {\r\n        color: _color.getColor(this.titleColor),\r\n      };\r\n    },\r\n    titleClasses() {\r\n      let str = \"\";\r\n\r\n      // add content color\r\n      if (_color.isColor(this.titleColor)) {\r\n        str += ` text-${this.titleColor}`;\r\n      }\r\n\r\n      return str.trim();\r\n    },\r\n    subtitleStyles() {\r\n      const obj = {};\r\n      if (!_color.isColor(this.subtitleColor))\r\n        obj.color = _color.getColor(this.subtitleColor);\r\n\r\n      return obj;\r\n    },\r\n    subtitleClasses() {\r\n      let str = \"\";\r\n\r\n      // add content color\r\n      if (_color.isColor(this.subtitleColor)) {\r\n        str += ` text-${this.subtitleColor}`;\r\n      }\r\n\r\n      return str.trim();\r\n    },\r\n  },\r\n  methods: {\r\n    toggleContent() {\r\n      this.$refs.content.style.overflow = \"hidden\";\r\n      const scrollHeight = this.$refs.content.scrollHeight;\r\n      if (this.maxHeight === \"1.5rem\") {\r\n        this.maxHeight = `${scrollHeight}px`;\r\n        setTimeout(() => {\r\n          this.maxHeight = \"none\";\r\n          this.$refs.content.style.overflow = null;\r\n        }, 300);\r\n      } else {\r\n        this.maxHeight = `${scrollHeight}px`;\r\n        setTimeout(() => {\r\n          this.maxHeight = \"1.5rem\";\r\n          this.$refs.content.style.overflow = null;\r\n        }, 50);\r\n      }\r\n      this.isContentCollapsed = !this.isContentCollapsed;\r\n      this.$emit(\"toggleCollapse\", this.isContentCollapsed);\r\n    },\r\n    refreshcard() {\r\n      this.$vs.loading({\r\n        container: this.$refs.content,\r\n        scale: 0.5,\r\n      });\r\n      this.tempHidden = true;\r\n      this.$emit(\"refresh\", this);\r\n    },\r\n    removeRefreshAnimation(time = 100) {\r\n      setTimeout(() => {\r\n        this.$vs.loading.close(this.$refs.content);\r\n        this.tempHidden = false;\r\n      }, time);\r\n    },\r\n    removeCard() {\r\n      const scrollHeight = this.$refs.card.scrollHeight;\r\n      this.cardMaxHeight = `${scrollHeight}px`;\r\n      this.$el.style.overflow = \"hidden\";\r\n      setTimeout(() => {\r\n        this.cardMaxHeight = \"0px\";\r\n      }, 50);\r\n      this.$emit(\"remove\");\r\n    },\r\n    toggleCode() {\r\n      this.tempHidden = true;\r\n      this.showCode = !this.showCode;\r\n      const scrollHeight = this.$refs.codeContainer.scrollHeight;\r\n      if (this.codeContainerMaxHeight === \"0px\") {\r\n        this.codeContainerMaxHeight = `${scrollHeight}px`;\r\n        setTimeout(() => {\r\n          this.codeContainerMaxHeight = \"none\";\r\n          this.tempHidden = false;\r\n        }, 300);\r\n      } else {\r\n        this.codeContainerMaxHeight = `${scrollHeight}px`;\r\n        setTimeout(() => {\r\n          this.codeContainerMaxHeight = \"0px\";\r\n          this.tempHidden = false;\r\n        }, 150);\r\n      }\r\n    },\r\n  },\r\n  components: {\r\n    Prism,\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/utils/vuexy/components/vxCard.scss\";\r\n</style>\r\n"]}]}