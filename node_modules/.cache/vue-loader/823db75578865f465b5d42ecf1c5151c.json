{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\src\\components\\BaseCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\src\\components\\BaseCheckbox.vue","mtime":1599860049402},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599859908808},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\babel-loader\\lib\\index.js","mtime":1599859897876},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599859908808},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\vue-loader\\lib\\index.js","mtime":1599860014830}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyByYW5kb21TdHJpbmcgfSBmcm9tICIuL3N0cmluZ1V0aWxzIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiYmFzZS1jaGVja2JveCIsDQogIG1vZGVsOiB7DQogICAgcHJvcDogImNoZWNrZWQiDQogIH0sDQogIHByb3BzOiB7DQogICAgY2hlY2tlZDogew0KICAgICAgdHlwZTogW0FycmF5LCBCb29sZWFuXSwNCiAgICAgIGRlc2NyaXB0aW9uOiAiV2hldGhlciBjaGVja2JveCBpcyBjaGVja2VkIg0KICAgIH0sDQogICAgZGlzYWJsZWQ6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZXNjcmlwdGlvbjogIldoZXRoZXIgY2hlY2tib3ggaXMgZGlzYWJsZWQiDQogICAgfSwNCiAgICBpbmxpbmU6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZXNjcmlwdGlvbjogIldoZXRoZXIgY2hlY2tib3ggaXMgaW5saW5lIg0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2JJZDogIiIsDQogICAgICB0b3VjaGVkOiBmYWxzZQ0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgbW9kZWw6IHsNCiAgICAgIGdldCgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuY2hlY2tlZDsNCiAgICAgIH0sDQogICAgICBzZXQoY2hlY2spIHsNCiAgICAgICAgaWYgKCF0aGlzLnRvdWNoZWQpIHsNCiAgICAgICAgICB0aGlzLnRvdWNoZWQgPSB0cnVlOw0KICAgICAgICB9DQogICAgICAgIHRoaXMuJGVtaXQoImlucHV0IiwgY2hlY2spOw0KICAgICAgfQ0KICAgIH0sDQogICAgaW5saW5lQ2xhc3MoKSB7DQogICAgICBpZiAodGhpcy5pbmxpbmUpIHsNCiAgICAgICAgcmV0dXJuIGBmb3JtLWNoZWNrLWlubGluZWA7DQogICAgICB9DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuY2JJZCA9IHJhbmRvbVN0cmluZygpDQogIH0NCn07DQo="},{"version":3,"sources":["BaseCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseCheckbox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"custom-control custom-checkbox\"\r\n       :class=\"[{disabled: disabled}, inlineClass]\">\r\n    <input :id=\"cbId\"\r\n           class=\"custom-control-input\"\r\n           type=\"checkbox\"\r\n           :disabled=\"disabled\"\r\n           v-model=\"model\"/>\r\n    <label :for=\"cbId\" class=\"custom-control-label\">\r\n      <slot>\r\n        <span v-if=\"inline\">&nbsp;</span>\r\n      </slot>\r\n    </label>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { randomString } from \"./stringUtils\";\r\n\r\nexport default {\r\n  name: \"base-checkbox\",\r\n  model: {\r\n    prop: \"checked\"\r\n  },\r\n  props: {\r\n    checked: {\r\n      type: [Array, Boolean],\r\n      description: \"Whether checkbox is checked\"\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      description: \"Whether checkbox is disabled\"\r\n    },\r\n    inline: {\r\n      type: Boolean,\r\n      description: \"Whether checkbox is inline\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cbId: \"\",\r\n      touched: false\r\n    };\r\n  },\r\n  computed: {\r\n    model: {\r\n      get() {\r\n        return this.checked;\r\n      },\r\n      set(check) {\r\n        if (!this.touched) {\r\n          this.touched = true;\r\n        }\r\n        this.$emit(\"input\", check);\r\n      }\r\n    },\r\n    inlineClass() {\r\n      if (this.inline) {\r\n        return `form-check-inline`;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.cbId = randomString()\r\n  }\r\n};\r\n</script>\r\n"]}]}