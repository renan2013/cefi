{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\src\\store\\actions.js","mtime":1599860049506},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1599859908808},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\cefi\\cefi\\node_modules\\babel-loader\\lib\\index.js","mtime":1599859897876}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL1JlbmFuIEdhbHZhbi9EZXNrdG9wL3NpbmNyb25pemFkb3NfZ2l0L2NlZmkvY2VmaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CgovKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogIEZpbGUgTmFtZTogYWN0aW9ucy5qcw0KICBEZXNjcmlwdGlvbjogVnVleCBTdG9yZSAtIGFjdGlvbnMNCiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KICBJdGVtIE5hbWU6IFZ1ZXh5IC0gVnVlanMsIEhUTUwgJiBMYXJhdmVsIEFkbWluIERhc2hib2FyZCBUZW1wbGF0ZQ0KICBBdXRob3I6IFBpeGludmVudA0KICBBdXRob3IgVVJMOiBodHRwOi8vd3d3LnRoZW1lZm9yZXN0Lm5ldC91c2VyL3BpeGludmVudA0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHJvdXRlciBmcm9tICdAL3JvdXRlcic7CmltcG9ydCAqIGFzIGRpdmlsaWIgZnJvbSAnQC9kaXZpc29mdGxpYnMvdXRpbERpdmlzb2Z0SlMuanMnOwp2YXIgYWN0aW9ucyA9IHsKICAvLyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAvLyBDT01QT05FTlRTIAogIC8vIFZlcnRpY2FsIE5hdk1lbnUKICB1cGRhdGVWZXJ0aWNhbE5hdk1lbnVXaWR0aDogZnVuY3Rpb24gdXBkYXRlVmVydGljYWxOYXZNZW51V2lkdGgoX3JlZiwgd2lkdGgpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIGNvbW1pdCgnVVBEQVRFX1ZFUlRJQ0FMX05BVl9NRU5VX1dJRFRIJywgd2lkdGgpOwogIH0sCiAgLy8gVnhBdXRvU3VnZ2VzdAogIHVwZGF0ZVN0YXJyZWRQYWdlOiBmdW5jdGlvbiB1cGRhdGVTdGFycmVkUGFnZShfcmVmMiwgcGF5bG9hZCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgIGNvbW1pdCgnVVBEQVRFX1NUQVJSRURfUEFHRScsIHBheWxvYWQpOwogIH0sCiAgLy8gVGhlIE5hdmJhcgogIGFycmFuZ2VTdGFycmVkUGFnZXNMaW1pdGVkOiBmdW5jdGlvbiBhcnJhbmdlU3RhcnJlZFBhZ2VzTGltaXRlZChfcmVmMywgbGlzdCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgIGNvbW1pdCgnQVJSQU5HRV9TVEFSUkVEX1BBR0VTX0xJTUlURUQnLCBsaXN0KTsKICB9LAogIGFycmFuZ2VTdGFycmVkUGFnZXNNb3JlOiBmdW5jdGlvbiBhcnJhbmdlU3RhcnJlZFBhZ2VzTW9yZShfcmVmNCwgbGlzdCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgIGNvbW1pdCgnQVJSQU5HRV9TVEFSUkVEX1BBR0VTX01PUkUnLCBsaXN0KTsKICB9LAogIC8vIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogIC8vIFVJCiAgLy8gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgdG9nZ2xlQ29udGVudE92ZXJsYXk6IGZ1bmN0aW9uIHRvZ2dsZUNvbnRlbnRPdmVybGF5KF9yZWY1KSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgY29tbWl0KCdUT0dHTEVfQ09OVEVOVF9PVkVSTEFZJyk7CiAgfSwKICB1cGRhdGVUaGVtZTogZnVuY3Rpb24gdXBkYXRlVGhlbWUoX3JlZjYsIHZhbCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICAgIGNvbW1pdCgnVVBEQVRFX1RIRU1FJywgdmFsKTsKICB9LAogIC8vIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogIC8vIFVzZXIvQWNjb3VudAogIC8vIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogIHVwZGF0ZVVzZXJJbmZvOiBmdW5jdGlvbiB1cGRhdGVVc2VySW5mbyhfcmVmNywgcGF5bG9hZCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY3LmNvbW1pdDsKICAgIGNvbW1pdCgnVVBEQVRFX1VTRVJfSU5GTycsIHBheWxvYWQpOwogIH0sCiAgdXBkYXRlVXNlclJvbGU6IGZ1bmN0aW9uIHVwZGF0ZVVzZXJSb2xlKF9yZWY4LCBwYXlsb2FkKSB7CiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmOC5kaXNwYXRjaDsKICAgIC8vIENoYW5nZSBjbGllbnQgc2lkZQogICAgcGF5bG9hZC5hY2xDaGFuZ2VSb2xlKHBheWxvYWQudXNlclJvbGUpOyAvLyBNYWtlIEFQSSBjYWxsIHRvIHNlcnZlciBmb3IgY2hhbmdpbmcgcm9sZQogICAgLy8gQ2hhbmdlIHVzZXJJbmZvIGluIGxvY2FsU3RvcmFnZSBhbmQgc3RvcmUKCiAgICBkaXNwYXRjaCgndXBkYXRlVXNlckluZm8nLCB7CiAgICAgIHVzZXJSb2xlOiBwYXlsb2FkLnVzZXJSb2xlCiAgICB9KTsKICB9LAogIC8vIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCiAgLy8gRElWSVNPRlQgCiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogIGFjRHNvYVB1YmxpY2FjaW9uZXM6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfYWNEc29hUHVibGljYWNpb25lcyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmOSwgcGV0KSB7CiAgICAgIHZhciBkaXNwYXRjaCwgY29tbWl0LCBoZWFkZXJ0eHQsIGZpbGFzdHh0LCBwYXJhbXR4dCwgaGVhZGVyLCBvcmlnZW5VcmwsIGZpbGFzLCBwYXJhbWV0cm9zLCBwYXJhbWV0cm8xLCBwZXRUeHQsIHBlZGlkbzsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjkuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWY5LmNvbW1pdDsKICAgICAgICAgICAgICAvLyBnZWRlciBnZW5lcmljbwogICAgICAgICAgICAgIC8vIGFsZXJ0KCdjYXJnYSBQdWJsaWNhY2lvbmVzJyk7CiAgICAgICAgICAgICAgaGVhZGVydHh0ID0gIiI7CiAgICAgICAgICAgICAgZmlsYXN0eHQgPSAiIjsKICAgICAgICAgICAgICBwYXJhbXR4dCA9ICIiOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJsbGVnYSBhUHVibGljYWNpb25lcyIsIEpTT04uc3RyaW5naWZ5KHBldCkpOwogICAgICAgICAgICAgIGhlYWRlciA9IHsKICAgICAgICAgICAgICAgIE1PRE86IHBldC5kbWwsCiAgICAgICAgICAgICAgICBPQkpFQ1RJRDogcGV0Lk9iamVjdElkLAogICAgICAgICAgICAgICAgQ1JFREVOQ0lBTDogcGV0LkNyZWRlbmNpYWwsCiAgICAgICAgICAgICAgICBVU0VSTkFNRTogcGV0LlVzZXJuYW1lLAogICAgICAgICAgICAgICAgUkVHSVNUUk9TWFBBR0lOQTogJzIwMCcsCiAgICAgICAgICAgICAgICBQQUdJTkE6ICcxJwogICAgICAgICAgICAgIH07IC8vIGhlYWRlciBlbiB0ZXh0bwoKICAgICAgICAgICAgICBvcmlnZW5VcmwgPSAnTyc7IC8vIGFncmVnbyBsYXMgZmlsYXMKCiAgICAgICAgICAgICAgZmlsYXMgPSBbXTsgLy9hZ3JlZ2EgbGEgY2F0ZWdvcmlhCgogICAgICAgICAgICAgIHBhcmFtZXRyb3MgPSBbXTsKICAgICAgICAgICAgICBwYXJhbWV0cm8xID0ge307CgogICAgICAgICAgICAgIGlmIChwZXQuY2F0ZWdvcmlhID09IDk4KSB7CiAgICAgICAgICAgICAgICBwYXJhbWV0cm8xID0gewogICAgICAgICAgICAgICAgICBOT01CUkU6ICdudW1fcHVibGljYWNpb24nLAogICAgICAgICAgICAgICAgICBPUEVSQURPUjogJz0nLAogICAgICAgICAgICAgICAgICBWQUxPUjE6IHBldC5wdWJsaWNhY2lvbiwKICAgICAgICAgICAgICAgICAgVkFMT1IyOiAnJywKICAgICAgICAgICAgICAgICAgQ0RBVEE6ICcwJwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB9IGVsc2UgcGFyYW1ldHJvMSA9IHsKICAgICAgICAgICAgICAgIE5PTUJSRTogJ2lkX2NhdGVnb3JpYScsCiAgICAgICAgICAgICAgICBPUEVSQURPUjogJz0nLAogICAgICAgICAgICAgICAgVkFMT1IxOiBwZXQuY2F0ZWdvcmlhLAogICAgICAgICAgICAgICAgVkFMT1IyOiAnJywKICAgICAgICAgICAgICAgIENEQVRBOiAnMCcKICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBwYXJhbWV0cm9zLnB1c2gocGFyYW1ldHJvMSk7IC8vZW50cmVnYSBhcnJlZ2xvIGRlIHBhcmFtZXRyb3MgcmVjaWJlIHRleHRvIGRlIHBhcmFtZXRyb3MKCiAgICAgICAgICAgICAgaGVhZGVydHh0ID0gZGl2aWxpYi5HZXRIZWFkZXJTdHJpbmcoaGVhZGVyKTsKICAgICAgICAgICAgICBmaWxhc3R4dCA9ICI8RmlsYXMvPiI7CiAgICAgICAgICAgICAgcGFyYW10eHQgPSBkaXZpbGliLnBhcmFtQXJyYXl0b1N0cmludGcocGFyYW1ldHJvcyk7CiAgICAgICAgICAgICAgcGV0VHh0ID0gewogICAgICAgICAgICAgICAgaGVhZGVyOiBoZWFkZXJ0eHQsCiAgICAgICAgICAgICAgICBwYXJhbWV0cm9zOiBwYXJhbXR4dCwKICAgICAgICAgICAgICAgIGZpbGFzOiBmaWxhc3R4dAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgY29tbWl0KCdNVVRTRVRVUkwnLCAnTycpOyAvL2dyYXZhIGxhIHBldGljaW9uIEZJTEFTIFBBUkFNRVRST1MgWSBIRUFERVIKCiAgICAgICAgICAgICAgY29tbWl0KCdNVVRTRVRQRVRJQ0lPTlRYVCcsIHBldFR4dCk7IC8vIHBlZGl0byBnZW5lcmljbwoKICAgICAgICAgICAgICBwZWRpZG8gPSB7CiAgICAgICAgICAgICAgICBkbWw6IHBldC5kbWwsCiAgICAgICAgICAgICAgICBDcmVkZW5jaWFsOiBwZXQuQ3JlZGVuY2lhbCwKICAgICAgICAgICAgICAgIE9iamVjdElkOiBwZXQuT2JqZWN0SWQsCiAgICAgICAgICAgICAgICBmb3JtYXRvZW52aW86IHBldC5mb3JtYXRvZW52aW8sCiAgICAgICAgICAgICAgICBmb3JtYXRvcmVjaWJlOiBwZXQuZm9ybWF0b3JlY2liZSwKICAgICAgICAgICAgICAgIGluZGljYWRvcjogcGV0LmNhdGVnb3JpYSwKICAgICAgICAgICAgICAgIC8vIGZ1bmNpb24gZGUgcmVzcHVldGEgdW5pY2EgIHVuIHNvbG8gdmFsb3IKICAgICAgICAgICAgICAgIG9yaWdlblVybDogcGV0Lm9yaWdlblVybAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgZGlzcGF0Y2goJ2FjRHNvYVBIUDInLCBwZWRpZG8pOwoKICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gYWNEc29hUHVibGljYWNpb25lcyhfeCwgX3gyKSB7CiAgICAgIHJldHVybiBfYWNEc29hUHVibGljYWNpb25lcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBhY0Rzb2FQdWJsaWNhY2lvbmVzOwogIH0oKSwKICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vICAgIAogIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICBhY0Rzb2FQSFAyOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2FjRHNvYVBIUCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoX3JlZjEwLCBwZXQpIHsKICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIHN0YXRlLCBkYXRvcywgdXJsLCBqc29uRXJyb3IsIGRzb2FNb2RlbCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjEwLmRpc3BhdGNoLCBjb21taXQgPSBfcmVmMTAuY29tbWl0LCBzdGF0ZSA9IF9yZWYxMC5zdGF0ZTsKICAgICAgICAgICAgICBkYXRvcyA9IHN0YXRlLnBldGljaW9uOwogICAgICAgICAgICAgIHVybCA9IHN0YXRlLnVybERzb2FQSFA7IC8vbGltcGlhIG1lbnNhamUgZXJyb3IKCiAgICAgICAgICAgICAganNvbkVycm9yID0gewogICAgICAgICAgICAgICAgY29kaWdvRXJyb3I6ICcnLAogICAgICAgICAgICAgICAgbXNnRXJyb3I6ICcnCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBjb21taXQoJ01VVFJFR0lTVFJBRVJST1InLCBqc29uRXJyb3IpOwoKICAgICAgICAgICAgICBpZiAoIShwZXQuQ3JlZGVuY2lhbCA9PSBudWxsIHx8IHBldC5PYmplY3RJZCA9PSBudWxsKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgYWxlcnQoJ2FkZW50cm8gQ29uIEVycm9yICBjcmVkZW5jaWFsJyArIHBldC5DcmVkZW5jaWFsICsgJyAgb2JqZXRvICcgKyBwZXQuT2JqZWN0SWQpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJwZXRpY2lvbiIsIHBldCk7CiAgICAgICAgICAgICAgaWYgKHBldC5DcmVkZW5jaWFsID09IG51bGwpIGpzb25FcnJvciA9IHsKICAgICAgICAgICAgICAgIGNvZGlnb0Vycm9yOiAnOTAnLAogICAgICAgICAgICAgICAgbXNnRXJyb3I6ICdDcmVkZW5jaWFsIE51bG8nCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBpZiAocGV0Lk9iamVjdElkID09IG51bGwpIGpzb25FcnJvciA9IHsKICAgICAgICAgICAgICAgIGNvZGlnb0Vycm9yOiAnOTEnLAogICAgICAgICAgICAgICAgbXNnRXJyb3I6ICdPYmpldG8gQkQgbm8gaWRlbnRpZmljYWRvJwogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgY29tbWl0KCdNVVRSRUdJU1RSQUVSUk9SJywganNvbkVycm9yKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI4OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBkc29hTW9kZWwgPSB7CiAgICAgICAgICAgICAgICBkYXRvczogZGF0b3MsCiAgICAgICAgICAgICAgICBtYW5pcHVsYTogJycsCiAgICAgICAgICAgICAgICBiZDogJycsCiAgICAgICAgICAgICAgICBkbWw6IHBldC5kbWwsCiAgICAgICAgICAgICAgICBmb3JtYXRvOiBwZXQuZm9ybWF0b2VudmlvLAogICAgICAgICAgICAgICAgZm9ybWF0b1JlcXVlc3Q6IHBldC5mb3JtYXRvcmVjaWJlLAogICAgICAgICAgICAgICAgY3JlZGVuY2lhbDogcGV0LmNyZWRlbmNpYWwsCiAgICAgICAgICAgICAgICB0ZWNub2xvZ2lhOiAnJywKICAgICAgICAgICAgICAgIGRhdG9zSnNvbjogJycsCiAgICAgICAgICAgICAgICBvYmplY3RJZDogcGV0Lk9iamVjdElkCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWNEc29hUEhQMiBydXRhICcgKyB1cmwsIEpTT04uc3RyaW5naWZ5KGRzb2FNb2RlbCkpOwogICAgICAgICAgICAgIGNvbW1pdCgnTVVUUFJPQ0VTQU5ET1RSVUUnKTsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE2OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zKHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBwcm9jZXNzRGF0YTogZmFsc2UsCiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogZmFsc2UsCiAgICAgICAgICAgICAgICBtaW1lVHlwZTogJ211bHRpcGFydC9mb3JtLWRhdGEnLAogICAgICAgICAgICAgICAgc3luYzogZmFsc2UsCiAgICAgICAgICAgICAgICBjcm9zc0RvbWFpbjogdHJ1ZSwKICAgICAgICAgICAgICAgIGRhdGE6IGRzb2FNb2RlbAogICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICBjb21taXQoJ01VVFNFVFBFVElDSU9OVFhUJywgIiIpOwogICAgICAgICAgICAgICAgY29tbWl0KCdNVVRQUk9DRVNBTkRPRkFMU0UnKTsgLy8gY29uc29sZS5sb2coJ1BIUFBIUFBIUExBUkdPIERFIFJFU1BVRVNUQSAgYWNEc29hJywgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuZGF0YSkpOwogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnSU5ESUNBRE9SJywgcGV0LmluZGljYWRvcik7CiAgICAgICAgICAgICAgICAvL2V2YWx1YSBlbCBpbmRpY2Fkb3IKCiAgICAgICAgICAgICAgICBpZiAocGV0LmluZGljYWRvciA9PSAxIC8vIGlzSW1hZ2VuZXMKICAgICAgICAgICAgICAgIHx8IHBldC5pbmRpY2Fkb3IgPT0gMiAvLyAgIGNhdFZpZGVvczogMiAKICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIC8vY2F0SW1hZ2VuZXM6IDEKICAgICAgICAgICAgICAgICAgICBjb21taXQoJ01VVFNFVFJFU1BVRVNUQUdSSUQnLCByZXNwb25zZS5kYXRhKTsgLy9jYXJnYSB2YXJpYWJsZSBjb24gbG9zIGRhdG9zCiAgICAgICAgICAgICAgICAgICAgLy9sbGFtbyBhIHVuICBmdW5jaW9uIHF1ZSBsbGVuYSBsb3MgZGF0b3MgY29uIGxhcyBpbWFnZW5lcwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKHBldC5pbmRpY2Fkb3IgPT0gNSkgY29tbWl0KCdNVVRTRVRSRVNQVUVTVEFTTElERVJNJywgcmVzcG9uc2UuZGF0YSk7IC8vY2FyZ2EgdmFyaWFibGUgY29uIGxvcyBkYXRvcwoKICAgICAgICAgICAgICAgIGlmIChwZXQuaW5kaWNhZG9yID09IDYpIGNvbW1pdCgnTVVUU0VUUkVTUFVFU1RBU0xJREVSJywgcmVzcG9uc2UuZGF0YSk7IC8vY2FyZ2EgdmFyaWFibGUgY29uIGxvcyBkYXRvcwoKICAgICAgICAgICAgICAgIGlmIChwZXQuaW5kaWNhZG9yID09IDgpIGNvbW1pdCgnTVVUU0VUUkVTUFVFU1RBR0VORVJJQ08nLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICAgIGlmIChwZXQuaW5kaWNhZG9yID09IDk4KSAvLyAgUFVCTElDQUNJT04gREVTQVJST0xMQURBCiAgICAgICAgICAgICAgICAgIGNvbW1pdCgnTVVUU0VUUkVTUFVFU1RBREVTQVJST0xMTycsIHJlc3BvbnNlLmRhdGEpOyAvL2NhcmdhIHZhcmlhYmxlIGNvbiBsb3MgZGF0b3MKICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdQSFBQSFBQSFBQSFAnKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnTVVUU0VUUEVUSUNJT05UWFQnLCAiIik7CiAgICAgICAgICAgICAgICBjb21taXQoJ01VVFBST0NFU0FORE9GQUxTRScpOwoKICAgICAgICAgICAgICAgIGlmIChlcnJvci5yZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAvLyBSZXF1ZXN0IG1hZGUgYW5kIHNlcnZlciByZXNwb25kZWQKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlLnN0YXR1cyk7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlLmhlYWRlcnMpOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlcnJvci5yZXF1ZXN0KSB7CiAgICAgICAgICAgICAgICAgIC8vIFRoZSByZXF1ZXN0IHdhcyBtYWRlIGJ1dCBubyByZXNwb25zZSB3YXMgcmVjZWl2ZWQKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IucmVxdWVzdCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAvLyBTb21ldGhpbmcgaGFwcGVuZWQgaW4gc2V0dGluZyB1cCB0aGUgcmVxdWVzdCB0aGF0IHRyaWdnZXJlZCBhbiBFcnJvcgogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU0UgUFJPRFVKTyBFUlJPUiAnICsgZXJyb3IpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI4OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDIyOwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxNik7CiAgICAgICAgICAgICAgY29tbWl0KCdNVVRTRVRQRVRJQ0lPTlRYVCcsICIiKTsKICAgICAgICAgICAgICBjb21taXQoJ01VVFBST0NFU0FORE9GQUxTRScpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdQSFBQSFBQSFBQSFAgRVJST1IgJyk7CiAgICAgICAgICAgICAgYWxlcnQoX2NvbnRleHQyLnQwKTsgLy8gY2F0Y2hlcyBib3RoIGVycm9ycwoKICAgICAgICAgICAgY2FzZSAyODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzE2LCAyMl1dKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBhY0Rzb2FQSFAyKF94MywgX3g0KSB7CiAgICAgIHJldHVybiBfYWNEc29hUEhQLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGFjRHNvYVBIUDI7CiAgfSgpLAogIGFjUXVlcnlHZW5lcmljbzogZnVuY3Rpb24gKCkgewogICAgdmFyIF9hY1F1ZXJ5R2VuZXJpY28gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKF9yZWYxMSwgcGV0KSB7CiAgICAgIHZhciBkaXNwYXRjaCwgY29tbWl0LCBoZWFkZXIsIG9yaWdlblVybCwgZmlsYXMsIHBhcmFtZXRyb3MsIGhlYWRlcnR4dCwgZmlsYXN0eHQsIHBhcmFtdHh0LCBwZXRUeHQsIHBlZGlkbzsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYxMS5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZjExLmNvbW1pdDsKICAgICAgICAgICAgICAvLyBnZWRlciBnZW5lcmljbwogICAgICAgICAgICAgIC8vICBjb25zb2xlLmxvZygnTExBTUFORE8gR0VORVJJQ08gJywgSlNPTi5zdHJpbmdpZnkocGV0KSk7CiAgICAgICAgICAgICAgaGVhZGVyID0gewogICAgICAgICAgICAgICAgTU9ETzogcGV0LmRtbCwKICAgICAgICAgICAgICAgIE9CSkVDVElEOiBwZXQuT2JqZWN0SWQsCiAgICAgICAgICAgICAgICBDUkVERU5DSUFMOiBwZXQuQ3JlZGVuY2lhbCwKICAgICAgICAgICAgICAgIFVTRVJOQU1FOiBwZXQuVXNlcm5hbWUsCiAgICAgICAgICAgICAgICBSRUdJU1RST1NYUEFHSU5BOiAnMScsCiAgICAgICAgICAgICAgICBQQUdJTkE6ICcxJwogICAgICAgICAgICAgIH07IC8vIGhlYWRlciBlbiB0ZXh0bwoKICAgICAgICAgICAgICBvcmlnZW5VcmwgPSAnTyc7IC8vIGFncmVnbyBsYXMgZmlsYXMKCiAgICAgICAgICAgICAgZmlsYXMgPSBbXTsKICAgICAgICAgICAgICBmaWxhcy5wdXNoKHsKICAgICAgICAgICAgICAgIE5PTUJSRTogcGV0LkZpbGFSZWN1cGVyYSwKICAgICAgICAgICAgICAgIFZBTE9SMTogbnVsbCwKICAgICAgICAgICAgICAgIFZBTE9SMjogcGV0LkZvcm1hdG9GaWxhLAogICAgICAgICAgICAgICAgQ0RBVEE6ICcwJwogICAgICAgICAgICAgIH0pOyAvLyBmaWxhcyBlbiB0ZXh0bwoKICAgICAgICAgICAgICBwYXJhbWV0cm9zID0gW107CiAgICAgICAgICAgICAgcGV0LnBhcmFtZXRyb3MuZm9yRWFjaChmdW5jdGlvbiBjYWxsYmFjayhpdGVtKSB7CiAgICAgICAgICAgICAgICBpZiAoaXRlbS52YWxvci5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgIHZhciBwYXJhbWV0cm8xID0gewogICAgICAgICAgICAgICAgICAgIE5PTUJSRTogaXRlbS5ub21icmUsCiAgICAgICAgICAgICAgICAgICAgT1BFUkFET1I6ICc9JywKICAgICAgICAgICAgICAgICAgICBWQUxPUjE6IGl0ZW0udmFsb3IsCiAgICAgICAgICAgICAgICAgICAgVkFMT1IyOiAnJywKICAgICAgICAgICAgICAgICAgICBDREFUQTogJzAnCiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgIHBhcmFtZXRyb3MucHVzaChwYXJhbWV0cm8xKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsgLy9lbnRyZWdhIGFycmVnbG8gZGUgcGFyYW1ldHJvcyByZWNpYmUgdGV4dG8gZGUgcGFyYW1ldHJvcwoKICAgICAgICAgICAgICBoZWFkZXJ0eHQgPSBkaXZpbGliLkdldEhlYWRlclN0cmluZyhoZWFkZXIpOwogICAgICAgICAgICAgIGZpbGFzdHh0ID0gZGl2aWxpYi5maWxhQXJyYXl0b1N0cmludGcoZmlsYXMsICdOJyk7CiAgICAgICAgICAgICAgcGFyYW10eHQgPSBkaXZpbGliLnBhcmFtQXJyYXl0b1N0cmludGcocGFyYW1ldHJvcyk7CiAgICAgICAgICAgICAgcGV0VHh0ID0gewogICAgICAgICAgICAgICAgaGVhZGVyOiBoZWFkZXJ0eHQsCiAgICAgICAgICAgICAgICBwYXJhbWV0cm9zOiBwYXJhbXR4dCwKICAgICAgICAgICAgICAgIGZpbGFzOiBmaWxhc3R4dAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgY29tbWl0KCdNVVRTRVRVUkwnLCAnTycpOwogICAgICAgICAgICAgIGNvbW1pdCgnTVVUU0VUUEVUSUNJT05UWFQnLCBwZXRUeHQpOyAvLyBwZWRpdG8gZ2VuZXJpY28KCiAgICAgICAgICAgICAgcGVkaWRvID0gewogICAgICAgICAgICAgICAgZG1sOiBwZXQuZG1sLAogICAgICAgICAgICAgICAgQ3JlZGVuY2lhbDogcGV0LkNyZWRlbmNpYWwsCiAgICAgICAgICAgICAgICBPYmplY3RJZDogcGV0Lk9iamVjdElkLAogICAgICAgICAgICAgICAgZm9ybWF0b2VudmlvOiBwZXQuZm9ybWF0b2VudmlvLAogICAgICAgICAgICAgICAgZm9ybWF0b3JlY2liZTogcGV0LmZvcm1hdG9yZWNpYmUsCiAgICAgICAgICAgICAgICBpbmRpY2Fkb3I6IHBldC5pbmRpY2Fkb3IsCiAgICAgICAgICAgICAgICAvLyBmdW5jaW9uIGRlIHJlc3B1ZXRhIHVuaWNhICB1biBzb2xvIHZhbG9yCiAgICAgICAgICAgICAgICBvcmlnZW5Vcmw6IHBldC5vcmlnZW5VcmwKICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdMTEFNQU5ETyBHRU5FUklDTyBwZWRpZG8gRklOICAnLCBKU09OLnN0cmluZ2lmeShwZWRpZG8pKTsKICAgICAgICAgICAgICBkaXNwYXRjaCgnYWNEc29hUEhQMicsIHBlZGlkbyk7CgogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGFjUXVlcnlHZW5lcmljbyhfeDUsIF94NikgewogICAgICByZXR1cm4gX2FjUXVlcnlHZW5lcmljby5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBhY1F1ZXJ5R2VuZXJpY287CiAgfSgpLAogIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gICAgIAogIENNU2FjRHNvYUxpbXBpYTogZnVuY3Rpb24gKCkgewogICAgdmFyIF9DTVNhY0Rzb2FMaW1waWEgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KF9yZWYxMiwgcGV0KSB7CiAgICAgIHZhciBjb21taXQsIHN0YXRlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMi5jb21taXQsIHN0YXRlID0gX3JlZjEyLnN0YXRlOwogICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJsaW1waWFuZG8gbGEgUGV0aWNpb24gIiwgcGV0KQogICAgICAgICAgICAgIGNvbW1pdCgnTVVUU0VUREFUT1NERUZBVUxUQ01TJywgcGV0KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBDTVNhY0Rzb2FMaW1waWEoX3g3LCBfeDgpIHsKICAgICAgcmV0dXJuIF9DTVNhY0Rzb2FMaW1waWEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gQ01TYWNEc29hTGltcGlhOwogIH0oKQp9OwpleHBvcnQgZGVmYXVsdCBhY3Rpb25zOw=="},{"version":3,"sources":["C:/Users/Renan Galvan/Desktop/sincronizados_git/cefi/cefi/src/store/actions.js"],"names":["axios","router","divilib","actions","updateVerticalNavMenuWidth","width","commit","updateStarredPage","payload","arrangeStarredPagesLimited","list","arrangeStarredPagesMore","toggleContentOverlay","updateTheme","val","updateUserInfo","updateUserRole","dispatch","aclChangeRole","userRole","acDsoaPublicaciones","pet","headertxt","filastxt","paramtxt","console","log","JSON","stringify","header","MODO","dml","OBJECTID","ObjectId","CREDENCIAL","Credencial","USERNAME","Username","REGISTROSXPAGINA","PAGINA","origenUrl","filas","parametros","parametro1","categoria","NOMBRE","OPERADOR","VALOR1","publicacion","VALOR2","CDATA","push","GetHeaderString","paramArraytoStrintg","petTxt","pedido","formatoenvio","formatorecibe","indicador","acDsoaPHP2","state","datos","peticion","url","urlDsoaPHP","jsonError","codigoError","msgError","alert","dsoaModel","manipula","bd","formato","formatoRequest","credencial","tecnologia","datosJson","objectId","method","headers","processData","contentType","mimeType","sync","crossDomain","data","then","response","catch","error","status","request","res","acQueryGenerico","FilaRecupera","FormatoFila","forEach","callback","item","valor","length","nombre","filaArraytoStrintg","CMSacDsoaLimpia"],"mappings":"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","sourcesContent":["/*=========================================================================================\r\n  File Name: actions.js\r\n  Description: Vuex Store - actions\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\r\n\r\nimport axios from 'axios';\r\nimport router from '@/router';\r\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js';\r\n\r\nconst actions = {\r\n    // /////////////////////////////////////////////\r\n    // COMPONENTS \r\n    // Vertical NavMenu\r\n    updateVerticalNavMenuWidth({ commit }, width) {\r\n        commit('UPDATE_VERTICAL_NAV_MENU_WIDTH', width);\r\n    },\r\n\r\n    // VxAutoSuggest\r\n    updateStarredPage({ commit }, payload) {\r\n        commit('UPDATE_STARRED_PAGE', payload);\r\n    },\r\n\r\n    // The Navbar\r\n    arrangeStarredPagesLimited({ commit }, list) {\r\n        commit('ARRANGE_STARRED_PAGES_LIMITED', list);\r\n    },\r\n    arrangeStarredPagesMore({ commit }, list) {\r\n        commit('ARRANGE_STARRED_PAGES_MORE', list);\r\n    },\r\n\r\n    // /////////////////////////////////////////////\r\n    // UI\r\n    // /////////////////////////////////////////////\r\n\r\n    toggleContentOverlay({ commit }) {\r\n        commit('TOGGLE_CONTENT_OVERLAY');\r\n    },\r\n    updateTheme({ commit }, val) {\r\n        commit('UPDATE_THEME', val);\r\n    },\r\n\r\n    // /////////////////////////////////////////////\r\n    // User/Account\r\n    // /////////////////////////////////////////////\r\n\r\n    updateUserInfo({ commit }, payload) {\r\n        commit('UPDATE_USER_INFO', payload);\r\n    },\r\n    updateUserRole({ dispatch }, payload) {\r\n        // Change client side\r\n        payload.aclChangeRole(payload.userRole);\r\n\r\n        // Make API call to server for changing role\r\n\r\n        // Change userInfo in localStorage and store\r\n        dispatch('updateUserInfo', { userRole: payload.userRole });\r\n    },\r\n    // ////////////////////////////////////////////\r\n\r\n    // DIVISOFT \r\n    /////////////////////////////////////////////////////////////\r\n    async acDsoaPublicaciones({ dispatch, commit }, pet) {\r\n        // geder generico\r\n        // alert('carga Publicaciones');\r\n\r\n        let headertxt = \"\";\r\n        let filastxt = \"\";\r\n        let paramtxt = \"\";\r\n\r\n        console.log(\"llega aPublicaciones\", JSON.stringify(pet))\r\n        let header = {\r\n            MODO: pet.dml,\r\n            OBJECTID: pet.ObjectId,\r\n            CREDENCIAL: pet.Credencial,\r\n            USERNAME: pet.Username,\r\n            REGISTROSXPAGINA: '200',\r\n            PAGINA: '1'\r\n        };\r\n\r\n        // header en texto\r\n\r\n        let origenUrl = 'O';\r\n        // agrego las filas\r\n        let filas = [];\r\n        //agrega la categoria\r\n        let parametros = [];\r\n        let parametro1 = {};\r\n\r\n        if (pet.categoria == 98) {\r\n            parametro1 = {\r\n                NOMBRE: 'num_publicacion',\r\n                OPERADOR: '=',\r\n                VALOR1: pet.publicacion,\r\n                VALOR2: '',\r\n                CDATA: '0'\r\n            };\r\n        } else\r\n            parametro1 = {\r\n                NOMBRE: 'id_categoria',\r\n                OPERADOR: '=',\r\n                VALOR1: pet.categoria,\r\n                VALOR2: '',\r\n                CDATA: '0'\r\n            };\r\n\r\n        parametros.push(parametro1);\r\n        //entrega arreglo de parametros recibe texto de parametros\r\n\r\n        headertxt = divilib.GetHeaderString(header);\r\n        filastxt = \"<Filas/>\";\r\n        paramtxt = divilib.paramArraytoStrintg(parametros);\r\n\r\n        let petTxt = {\r\n            header: headertxt,\r\n            parametros: paramtxt,\r\n            filas: filastxt\r\n        };\r\n\r\n\r\n        commit('MUTSETURL', 'O');\r\n        //grava la peticion FILAS PARAMETROS Y HEADER\r\n        commit('MUTSETPETICIONTXT', petTxt);\r\n\r\n        // pedito generico\r\n        let pedido = {\r\n            dml: pet.dml,\r\n            Credencial: pet.Credencial,\r\n            ObjectId: pet.ObjectId,\r\n            formatoenvio: pet.formatoenvio,\r\n            formatorecibe: pet.formatorecibe,\r\n            indicador: pet.categoria, // funcion de respueta unica  un solo valor\r\n            origenUrl: pet.origenUrl\r\n        };\r\n        dispatch('acDsoaPHP2', pedido);\r\n    },\r\n\r\n    /////////////////////////////////////////////////////////////    \r\n\r\n    /////////////////////////////////////////////////////////////\r\n    async acDsoaPHP2({ dispatch, commit, state }, pet) {\r\n        const datos = state.peticion;\r\n        const url = state.urlDsoaPHP;\r\n\r\n        //limpia mensaje error\r\n        var jsonError = {\r\n            codigoError: '',\r\n            msgError: ''\r\n        };\r\n        commit('MUTREGISTRAERROR', jsonError);\r\n\r\n        if (pet.Credencial == null || pet.ObjectId == null) {\r\n            alert('adentro Con Error  credencial' + pet.Credencial + '  objeto ' + pet.ObjectId);\r\n            console.log(\"peticion\", pet);\r\n            if (pet.Credencial == null)\r\n                var jsonError = {\r\n                    codigoError: '90',\r\n                    msgError: 'Credencial Nulo'\r\n                };\r\n\r\n            if (pet.ObjectId == null)\r\n                var jsonError = {\r\n                    codigoError: '91',\r\n                    msgError: 'Objeto BD no identificado'\r\n                };\r\n\r\n            commit('MUTREGISTRAERROR', jsonError);\r\n        } else {\r\n            var dsoaModel = {\r\n                datos: datos,\r\n                manipula: '',\r\n                bd: '',\r\n                dml: pet.dml,\r\n                formato: pet.formatoenvio,\r\n                formatoRequest: pet.formatorecibe,\r\n                credencial: pet.credencial,\r\n                tecnologia: '',\r\n                datosJson: '',\r\n                objectId: pet.ObjectId\r\n            };\r\n\r\n            console.log('acDsoaPHP2 ruta ' + url, JSON.stringify(dsoaModel));\r\n            commit('MUTPROCESANDOTRUE');\r\n\r\n            try {\r\n                // fetch data from a url web service\r\n\r\n\r\n\r\n                let res = await axios({\r\n                        method: 'POST',\r\n                        url,\r\n                        headers: {\r\n                            'content-type': 'application/json'\r\n                        },\r\n                        processData: false,\r\n                        contentType: false,\r\n                        mimeType: 'multipart/form-data',\r\n                        sync: false,\r\n                        crossDomain: true,\r\n                        data: dsoaModel\r\n                    })\r\n                    .then((response) => {\r\n\r\n\r\n\r\n                        commit('MUTSETPETICIONTXT', \"\");\r\n\r\n\r\n                        commit('MUTPROCESANDOFALSE');\r\n                        // console.log('PHPPHPPHPLARGO DE RESPUESTA  acDsoa', JSON.stringify(response.data));\r\n\r\n                        //console.log('INDICADOR', pet.indicador);\r\n\r\n                        //evalua el indicador\r\n                        if (pet.indicador == 1 // isImagenes\r\n                            ||\r\n                            pet.indicador == 2 //   catVideos: 2 \r\n                        ) {\r\n                            //catImagenes: 1\r\n                            commit('MUTSETRESPUESTAGRID', response.data); //carga variable con los datos\r\n                            //llamo a un  funcion que llena los datos con las imagenes\r\n\r\n                        }\r\n\r\n                        if (pet.indicador == 5)\r\n                            commit('MUTSETRESPUESTASLIDERM', response.data); //carga variable con los datos\r\n\r\n                        if (pet.indicador == 6)\r\n                            commit('MUTSETRESPUESTASLIDER', response.data); //carga variable con los datos\r\n\r\n\r\n                        if (pet.indicador == 8)\r\n                            commit('MUTSETRESPUESTAGENERICO', response.data);\r\n\r\n\r\n\r\n                        if (pet.indicador == 98) //  PUBLICACION DESARROLLADA\r\n                            commit('MUTSETRESPUESTADESARROLLO', response.data); //carga variable con los datos\r\n\r\n\r\n                    })\r\n                    .catch(function(error) {\r\n                        console.log('PHPPHPPHPPHP');\r\n                        commit('MUTSETPETICIONTXT', \"\");\r\n                        commit('MUTPROCESANDOFALSE');\r\n                        if (error.response) {\r\n                            // Request made and server responded\r\n                            console.log(error.response.data);\r\n                            console.log(error.response.status);\r\n                            console.log(error.response.headers);\r\n                        } else if (error.request) {\r\n                            // The request was made but no response was received\r\n                            console.log(error.request);\r\n                        } else {\r\n                            // Something happened in setting up the request that triggered an Error\r\n                            console.log('SE PRODUJO ERROR ' + error);\r\n                        }\r\n                    });\r\n            } catch (error) {\r\n                commit('MUTSETPETICIONTXT', \"\");\r\n                commit('MUTPROCESANDOFALSE');\r\n                console.log('PHPPHPPHPPHP ERROR ');\r\n                alert(error); // catches both errors\r\n            }\r\n        }\r\n    },\r\n\r\n    async acQueryGenerico({ dispatch, commit }, pet) {\r\n        // geder generico\r\n        //  console.log('LLAMANDO GENERICO ', JSON.stringify(pet));\r\n        let header = {\r\n            MODO: pet.dml,\r\n            OBJECTID: pet.ObjectId,\r\n            CREDENCIAL: pet.Credencial,\r\n            USERNAME: pet.Username,\r\n            REGISTROSXPAGINA: '1',\r\n            PAGINA: '1'\r\n        };\r\n        // header en texto\r\n\r\n        let origenUrl = 'O';\r\n        // agrego las filas\r\n        let filas = [];\r\n        filas.push({\r\n            NOMBRE: pet.FilaRecupera,\r\n            VALOR1: null,\r\n            VALOR2: pet.FormatoFila,\r\n            CDATA: '0'\r\n        });\r\n        // filas en texto\r\n\r\n        var parametros = [];\r\n        pet.parametros.forEach(function callback(item) {\r\n            if (item.valor.length > 0) {\r\n                var parametro1 = {\r\n                    NOMBRE: item.nombre,\r\n                    OPERADOR: '=',\r\n                    VALOR1: item.valor,\r\n                    VALOR2: '',\r\n                    CDATA: '0'\r\n                };\r\n                parametros.push(parametro1);\r\n            }\r\n        });\r\n\r\n        //entrega arreglo de parametros recibe texto de parametros\r\n        let headertxt = divilib.GetHeaderString(header);\r\n        let filastxt = divilib.filaArraytoStrintg(filas, 'N');\r\n        let paramtxt = divilib.paramArraytoStrintg(parametros);\r\n\r\n        let petTxt = {\r\n            header: headertxt,\r\n            parametros: paramtxt,\r\n            filas: filastxt\r\n        };\r\n        commit('MUTSETURL', 'O');\r\n        commit('MUTSETPETICIONTXT', petTxt);\r\n\r\n        // pedito generico\r\n        var pedido = {\r\n            dml: pet.dml,\r\n            Credencial: pet.Credencial,\r\n            ObjectId: pet.ObjectId,\r\n            formatoenvio: pet.formatoenvio,\r\n            formatorecibe: pet.formatorecibe,\r\n            indicador: pet.indicador, // funcion de respueta unica  un solo valor\r\n            origenUrl: pet.origenUrl\r\n        };\r\n        console.log('LLAMANDO GENERICO pedido FIN  ', JSON.stringify(pedido));\r\n\r\n        dispatch('acDsoaPHP2', pedido);\r\n    },\r\n\r\n\r\n    /////////////////////////////////////////////////////////////     \r\n    async CMSacDsoaLimpia({ commit, state }, pet) {\r\n        // console.log(\"limpiando la Peticion \", pet)\r\n        commit('MUTSETDATOSDEFAULTCMS', pet);\r\n    }\r\n};\r\n\r\nexport default actions;"]}]}