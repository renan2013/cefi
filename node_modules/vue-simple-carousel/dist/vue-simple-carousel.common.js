/*!
  * vue-simple-carousel v0.4.3
  * (c) 2020 Nikita Umnov
  * @license MIT
  */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Vue = _interopDefault(require('vue'));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") { r = Reflect.decorate(decorators, target, key, desc); }
    else { for (var i = decorators.length - 1; i >= 0; i--) { if (d = decorators[i]) { r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r; } } }
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

/**
  * vue-class-component v7.1.0
  * (c) 2015-present Evan You
  * @license MIT
  */

// The rational behind the verbose Reflect-feature check below is the fact that there are polyfills
// which add an implementation for Reflect.defineMetadata but not for Reflect.getOwnMetadataKeys.
// Without this check consumers will encounter hard to track down runtime errors.
var reflectionIsSupported = typeof Reflect !== 'undefined' && Reflect.defineMetadata && Reflect.getOwnMetadataKeys;
function copyReflectionMetadata(to, from) {
    forwardMetadata(to, from);
    Object.getOwnPropertyNames(from.prototype).forEach(function (key) {
        forwardMetadata(to.prototype, from.prototype, key);
    });
    Object.getOwnPropertyNames(from).forEach(function (key) {
        forwardMetadata(to, from, key);
    });
}
function forwardMetadata(to, from, propertyKey) {
    var metaKeys = propertyKey
        ? Reflect.getOwnMetadataKeys(from, propertyKey)
        : Reflect.getOwnMetadataKeys(from);
    metaKeys.forEach(function (metaKey) {
        var metadata = propertyKey
            ? Reflect.getOwnMetadata(metaKey, from, propertyKey)
            : Reflect.getOwnMetadata(metaKey, from);
        if (propertyKey) {
            Reflect.defineMetadata(metaKey, metadata, to, propertyKey);
        }
        else {
            Reflect.defineMetadata(metaKey, metadata, to);
        }
    });
}

var fakeArray = { __proto__: [] };
var hasProto = fakeArray instanceof Array;
function createDecorator(factory) {
    return function (target, key, index) {
        var Ctor = typeof target === 'function'
            ? target
            : target.constructor;
        if (!Ctor.__decorators__) {
            Ctor.__decorators__ = [];
        }
        if (typeof index !== 'number') {
            index = undefined;
        }
        Ctor.__decorators__.push(function (options) { return factory(options, key, index); });
    };
}
function isPrimitive(value) {
    var type = typeof value;
    return value == null || (type !== 'object' && type !== 'function');
}
function warn(message) {
    if (typeof console !== 'undefined') {
        console.warn('[vue-class-component] ' + message);
    }
}

function collectDataFromConstructor(vm, Component) {
    // override _init to prevent to init as Vue instance
    var originalInit = Component.prototype._init;
    Component.prototype._init = function () {
        var _this = this;
        // proxy to actual vm
        var keys = Object.getOwnPropertyNames(vm);
        // 2.2.0 compat (props are no longer exposed as self properties)
        if (vm.$options.props) {
            for (var key in vm.$options.props) {
                if (!vm.hasOwnProperty(key)) {
                    keys.push(key);
                }
            }
        }
        keys.forEach(function (key) {
            if (key.charAt(0) !== '_') {
                Object.defineProperty(_this, key, {
                    get: function () { return vm[key]; },
                    set: function (value) { vm[key] = value; },
                    configurable: true
                });
            }
        });
    };
    // should be acquired class property values
    var data = new Component();
    // restore original _init to avoid memory leak (#209)
    Component.prototype._init = originalInit;
    // create plain data object
    var plainData = {};
    Object.keys(data).forEach(function (key) {
        if (data[key] !== undefined) {
            plainData[key] = data[key];
        }
    });
    if (process.env.NODE_ENV !== 'production') {
        if (!(Component.prototype instanceof Vue) && Object.keys(plainData).length > 0) {
            warn('Component class must inherit Vue or its descendant class ' +
                'when class property is used.');
        }
    }
    return plainData;
}

var $internalHooks = [
    'data',
    'beforeCreate',
    'created',
    'beforeMount',
    'mounted',
    'beforeDestroy',
    'destroyed',
    'beforeUpdate',
    'updated',
    'activated',
    'deactivated',
    'render',
    'errorCaptured',
    'serverPrefetch' // 2.6
];
function componentFactory(Component, options) {
    if (options === void 0) { options = {}; }
    options.name = options.name || Component._componentTag || Component.name;
    // prototype props.
    var proto = Component.prototype;
    Object.getOwnPropertyNames(proto).forEach(function (key) {
        if (key === 'constructor') {
            return;
        }
        // hooks
        if ($internalHooks.indexOf(key) > -1) {
            options[key] = proto[key];
            return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        if (descriptor.value !== void 0) {
            // methods
            if (typeof descriptor.value === 'function') {
                (options.methods || (options.methods = {}))[key] = descriptor.value;
            }
            else {
                // typescript decorated data
                (options.mixins || (options.mixins = [])).push({
                    data: function () {
                        var _a;
                        return _a = {}, _a[key] = descriptor.value, _a;
                    }
                });
            }
        }
        else if (descriptor.get || descriptor.set) {
            // computed properties
            (options.computed || (options.computed = {}))[key] = {
                get: descriptor.get,
                set: descriptor.set
            };
        }
    });
    (options.mixins || (options.mixins = [])).push({
        data: function () {
            return collectDataFromConstructor(this, Component);
        }
    });
    // decorate options
    var decorators = Component.__decorators__;
    if (decorators) {
        decorators.forEach(function (fn) { return fn(options); });
        delete Component.__decorators__;
    }
    // find super
    var superProto = Object.getPrototypeOf(Component.prototype);
    var Super = superProto instanceof Vue
        ? superProto.constructor
        : Vue;
    var Extended = Super.extend(options);
    forwardStaticMembers(Extended, Component, Super);
    if (reflectionIsSupported) {
        copyReflectionMetadata(Extended, Component);
    }
    return Extended;
}
var reservedPropertyNames = [
    // Unique id
    'cid',
    // Super Vue constructor
    'super',
    // Component options that will be used by the component
    'options',
    'superOptions',
    'extendOptions',
    'sealedOptions',
    // Private assets
    'component',
    'directive',
    'filter'
];
var shouldIgnore = {
    prototype: true,
    arguments: true,
    callee: true,
    caller: true
};
function forwardStaticMembers(Extended, Original, Super) {
    // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable
    Object.getOwnPropertyNames(Original).forEach(function (key) {
        // Skip the properties that should not be overwritten
        if (shouldIgnore[key]) {
            return;
        }
        // Some browsers does not allow reconfigure built-in properties
        var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);
        if (extendedDescriptor && !extendedDescriptor.configurable) {
            return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(Original, key);
        // If the user agent does not support `__proto__` or its family (IE <= 10),
        // the sub class properties may be inherited properties from the super class in TypeScript.
        // We need to exclude such properties to prevent to overwrite
        // the component options object which stored on the extended constructor (See #192).
        // If the value is a referenced value (object or function),
        // we can check equality of them and exclude it if they have the same reference.
        // If it is a primitive value, it will be forwarded for safety.
        if (!hasProto) {
            // Only `cid` is explicitly exluded from property forwarding
            // because we cannot detect whether it is a inherited property or not
            // on the no `__proto__` environment even though the property is reserved.
            if (key === 'cid') {
                return;
            }
            var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);
            if (!isPrimitive(descriptor.value) &&
                superDescriptor &&
                superDescriptor.value === descriptor.value) {
                return;
            }
        }
        // Warn if the users manually declare reserved properties
        if (process.env.NODE_ENV !== 'production' &&
            reservedPropertyNames.indexOf(key) >= 0) {
            warn("Static property name '" + key + "' declared on class '" + Original.name + "' " +
                'conflicts with reserved property name of Vue internal. ' +
                'It may cause unexpected behavior of the component. Consider renaming the property.');
        }
        Object.defineProperty(Extended, key, descriptor);
    });
}

function Component(options) {
    if (typeof options === 'function') {
        return componentFactory(options);
    }
    return function (Component) {
        return componentFactory(Component, options);
    };
}
Component.registerHooks = function registerHooks(keys) {
    $internalHooks.push.apply($internalHooks, keys);
};

/** vue-property-decorator verson 8.2.1 MIT LICENSE copyright 2019 kaorun343 */
/** @see {@link https://github.com/vuejs/vue-class-component/blob/master/src/reflect.ts} */
var reflectMetadataIsSupported = typeof Reflect !== 'undefined' && typeof Reflect.getMetadata !== 'undefined';
function applyMetadata(options, target, key) {
    if (reflectMetadataIsSupported) {
        if (!Array.isArray(options) &&
            typeof options !== 'function' &&
            typeof options.type === 'undefined') {
            options.type = Reflect.getMetadata('design:type', target, key);
        }
    }
}
/**
 * decorator of a prop
 * @param  options the options for the prop
 * @return PropertyDecorator | void
 */
function Prop(options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
        })(target, key);
    };
}
/**
 * decorator of a watch function
 * @param  path the path or the expression to observe
 * @param  WatchOption
 * @return MethodDecorator
 */
function Watch(path, options) {
    if (options === void 0) { options = {}; }
    var _a = options.deep, deep = _a === void 0 ? false : _a, _b = options.immediate, immediate = _b === void 0 ? false : _b;
    return createDecorator(function (componentOptions, handler) {
        if (typeof componentOptions.watch !== 'object') {
            componentOptions.watch = Object.create(null);
        }
        var watch = componentOptions.watch;
        if (typeof watch[path] === 'object' && !Array.isArray(watch[path])) {
            watch[path] = [watch[path]];
        }
        else if (typeof watch[path] === 'undefined') {
            watch[path] = [];
        }
        watch[path].push({ handler: handler, deep: deep, immediate: immediate });
    });
}

var SimpleCarouselContainer = /*@__PURE__*/(function (Vue) {
    function SimpleCarouselContainer() {
        Vue.apply(this, arguments);
        this.itemsLength = 0;
        this.currentIndex = 0;
        this.moving = false;
        this.initTouchX = false;
        this.endTouchX = false;
    }

    if ( Vue ) SimpleCarouselContainer.__proto__ = Vue;
    SimpleCarouselContainer.prototype = Object.create( Vue && Vue.prototype );
    SimpleCarouselContainer.prototype.constructor = SimpleCarouselContainer;

    var prototypeAccessors = { points: { configurable: true },hasNext: { configurable: true },hasPrev: { configurable: true } };
    SimpleCarouselContainer.prototype.setItemsLength = function setItemsLength () {
        this.itemsLength = this.$slots.default && this.$slots.default.length ? this.$slots.default.filter(function (s) { return s.tag; }).length : 0;
    };
    prototypeAccessors.points.get = function () {
        return Array.from(Array(this.itemsLength - this.itemsOnScreen + 1).keys());
    };
    prototypeAccessors.hasNext.get = function () {
        return this.loop || this.currentIndex + 1 < this.points.length;
    };
    prototypeAccessors.hasPrev.get = function () {
        return this.loop || this.currentIndex > 0;
    };
    SimpleCarouselContainer.prototype.previous = function previous () {
        if (this.hasPrev) {
            this.setCurrentIndex(this.currentIndex - 1);
        }
    };
    SimpleCarouselContainer.prototype.next = function next () {
        if (this.hasNext) {
            this.setCurrentIndex(this.currentIndex + 1);
        }
    };
    SimpleCarouselContainer.prototype.setCurrentIndex = function setCurrentIndex (index) {
        if (this.moving)
            { return false; }
        if (index < 0)
            { index = this.loop ? this.itemsLength - 1 : 0; }
        if (this.itemsLength < index + 1)
            { index = this.loop ? 0 : this.itemsLength - 1; }
        this.currentIndex = index;
    };
    SimpleCarouselContainer.prototype.updateOrder = function updateOrder (index) {
        for (var i = 0; i < this.itemsLength; i++) {
            if (i >= index) {
                // @ts-ignore
                this.$refs.items.children[i].style.order = i - index;
            }
            else {
                // @ts-ignore
                this.$refs.items.children[i].style.order = this.itemsLength - index + i;
            }
        }
    };
    SimpleCarouselContainer.prototype.touchStart = function touchStart (event) {
        if (event.touches && event.touches.length) {
            this.initTouchX = event.touches[0].clientX;
        }
    };
    SimpleCarouselContainer.prototype.touchEnd = function touchEnd () {
        if (this.initTouchX !== false && this.endTouchX !== false) {
            var delta = this.initTouchX - this.endTouchX;
            if (Math.abs(delta) > 80) {
                if (delta < 0) {
                    this.setCurrentIndex(this.currentIndex - 1);
                }
                else {
                    this.setCurrentIndex(this.currentIndex + 1);
                }
            }
        }
        this.initTouchX = false;
        this.endTouchX = false;
    };
    SimpleCarouselContainer.prototype.touchMove = function touchMove (event) {
        if (this.initTouchX !== false && event.touches && event.touches.length) {
            this.endTouchX = event.touches[0].clientX;
        }
    };
    SimpleCarouselContainer.prototype.onWatchChange = function onWatchChange () {
        this.setItemsLength();
    };
    SimpleCarouselContainer.prototype.onCurrentIndexChange = function onCurrentIndexChange (nextIndex, previousIndex) {
        var this$1 = this;

        this.moving = true;
        var delta = nextIndex - previousIndex;
        if (this.loop && Math.abs(this.itemsLength / delta) < 2)
            { delta = (this.itemsLength - Math.abs(delta)) * (delta > 0 ? -1 : 1); }
        this.$emit('change', nextIndex);
        var itemWidth = 100 / this.itemsOnScreen;
        if (delta > 0) {
            // @ts-ignore
            this.$refs.items.style.transition = '.2s';
            // @ts-ignore
            this.$refs.items.style.marginLeft = (-itemWidth * delta) + "%";
            setTimeout(function () {
                // @ts-ignore
                this$1.$refs.items.style.transition = '0s';
                setTimeout(function () {
                    // @ts-ignore
                    this$1.$refs.items.style.marginLeft = '0';
                    this$1.updateOrder(nextIndex);
                    this$1.moving = false;
                });
            }, 200);
        }
        else {
            this.updateOrder(nextIndex);
            // @ts-ignore
            this.$refs.items.style.marginLeft = (itemWidth * delta) + "%";
            setTimeout(function () {
                // @ts-ignore
                this$1.$refs.items.style.transition = '.2s';
                setTimeout(function () {
                    // @ts-ignore
                    this$1.$refs.items.style.marginLeft = '0';
                    setTimeout(function () {
                        // @ts-ignore
                        this$1.$refs.items.style.transition = '0s';
                        this$1.moving = false;
                    }, 200);
                }, 50);
            }, 30);
        }
    };

    Object.defineProperties( SimpleCarouselContainer.prototype, prototypeAccessors );

    return SimpleCarouselContainer;
}(Vue));
__decorate([
    Prop({ type: Boolean })
], SimpleCarouselContainer.prototype, "loop", void 0);
__decorate([
    Prop()
], SimpleCarouselContainer.prototype, "watchIt", void 0);
__decorate([
    Prop({ type: Number, default: 1 })
], SimpleCarouselContainer.prototype, "itemsOnScreen", void 0);
__decorate([
    Watch('watchIt')
], SimpleCarouselContainer.prototype, "onWatchChange", null);
__decorate([
    Watch('currentIndex')
], SimpleCarouselContainer.prototype, "onCurrentIndexChange", null);
SimpleCarouselContainer = __decorate([
    Component({
        mounted: function mounted() {
            this.setItemsLength();
            // @ts-ignore
            if (process.browser) {
                document.addEventListener("touchmove", this.touchMove.bind(this));
                document.addEventListener("touchend", this.touchEnd.bind(this));
            }
        },
        beforeDestroy: function beforeDestroy() {
            // @ts-ignore
            if (process.browser) {
                document.removeEventListener("touchmove", this.touchMove.bind(this));
                document.removeEventListener("touchend", this.touchEnd.bind(this));
            }
        }
    })
], SimpleCarouselContainer);
var script = SimpleCarouselContainer;

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
/* server only */
, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
  if (typeof shadowMode !== 'boolean') {
    createInjectorSSR = createInjector;
    createInjector = shadowMode;
    shadowMode = false;
  } // Vue.extend constructor export interop.


  var options = typeof script === 'function' ? script.options : script; // render functions

  if (template && template.render) {
    options.render = template.render;
    options.staticRenderFns = template.staticRenderFns;
    options._compiled = true; // functional template

    if (isFunctionalTemplate) {
      options.functional = true;
    }
  } // scopedId


  if (scopeId) {
    options._scopeId = scopeId;
  }

  var hook;

  if (moduleIdentifier) {
    // server build
    hook = function hook(context) {
      // 2.3 injection
      context = context || // cached call
      this.$vnode && this.$vnode.ssrContext || // stateful
      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
      // 2.2 with runInNewContext: true

      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__;
      } // inject component styles


      if (style) {
        style.call(this, createInjectorSSR(context));
      } // register component module identifier for async chunk inference


      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    }; // used by ssr in case component is cached and beforeCreate
    // never gets called


    options._ssrRegister = hook;
  } else if (style) {
    hook = shadowMode ? function () {
      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));
    } : function (context) {
      style.call(this, createInjector(context));
    };
  }

  if (hook) {
    if (options.functional) {
      // register for functional component in vue file
      var originalRender = options.render;

      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate;
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }

  return script;
}

var normalizeComponent_1 = normalizeComponent;

function createInjectorSSR(context) {
  if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
    context = __VUE_SSR_CONTEXT__;
  }

  if (!context) { return function () {}; }

  if (!('styles' in context)) {
    context._styles = context._styles || {};
    Object.defineProperty(context, 'styles', {
      enumerable: true,
      get: function get() {
        return context._renderStyles(context._styles);
      }
    });
    context._renderStyles = context._renderStyles || renderStyles;
  }

  return function (id, style) {
    return addStyle(id, style, context);
  };
}

function addStyle(id, css, context) {
  var group = process.env.NODE_ENV === 'production' ? css.media || 'default' : id;
  var style = context._styles[group] || (context._styles[group] = {
    ids: [],
    css: ''
  });

  if (!style.ids.includes(id)) {
    style.media = css.media;
    style.ids.push(id);
    var code = css.source;

    if (process.env.NODE_ENV !== 'production' && css.map) {
      // https://developer.chrome.com/devtools/docs/javascript-debugging
      // this makes source maps inside style tags work properly in Chrome
      code += '\n/*# sourceURL=' + css.map.sources[0] + ' */'; // http://stackoverflow.com/a/26603875

      code += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + ' */';
    }

    style.css += code + '\n';
  }
}

function renderStyles(styles) {
  var css = '';

  for (var key in styles) {
    var style = styles[key];
    css += '<style data-vue-ssr-id="' + Array.from(style.ids).join(' ') + '"' + (style.media ? ' media="' + style.media + '"' : '') + '>' + style.css + '</style>';
  }

  return css;
}

var server = createInjectorSSR;

/* script */
var __vue_script__ = script;

/* template */
var __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"vue-simple-carousel-container"},[_vm._ssrNode("<div class=\"vsc-scroller\">","</div>",[_vm._ssrNode("<div"+(_vm._ssrClass("vsc-items",{moving: _vm.moving}))+(_vm._ssrStyle(null,{width: ((_vm.itemsLength * (100 / _vm.itemsOnScreen)) + "%")}, null))+">","</div>",[_vm._t("default")],2)]),(_vm.itemsLength > 1)?_vm._ssrNode("<div class=\"vsc-controls\">","</div>",[_vm._ssrNode("<div"+(_vm._ssrClass("arrow prev",{disabled: !_vm.hasPrev}))+">","</div>",[_vm._t("arrow-prev",[_vm._v("←")])],2),_vm._ssrNode("<div class=\"vsc-points\">"+(_vm._ssrList((_vm.points),function(point){return ("<div"+(_vm._ssrClass("vsc-point",{current: _vm.currentIndex === point}))+"></div>")}))+"</div>"),_vm._ssrNode("<div"+(_vm._ssrClass("arrow next",{disabled: !_vm.hasNext}))+">","</div>",[_vm._t("arrow-next",[_vm._v("→")])],2)],2):_vm._e()])};
var __vue_staticRenderFns__ = [];

  /* style */
  var __vue_inject_styles__ = function (inject) {
    if (!inject) { return }
    inject("data-v-719b3a93_0", { source: ".vue-simple-carousel-container{width:100%}.vue-simple-carousel-container .vsc-scroller{overflow:hidden}.vue-simple-carousel-container .vsc-scroller .vsc-items{display:flex;min-width:100%}.vue-simple-carousel-container .vsc-scroller .vsc-items .vue-simple-carousel-item{width:100%;min-width:100vw}.vue-simple-carousel-container .vsc-scroller .vsc-items.moving .vue-simple-carousel-item{position:relative}.vue-simple-carousel-container .vsc-scroller .vsc-items.moving .vue-simple-carousel-item::before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;z-index:1}.vue-simple-carousel-container .vsc-controls{display:flex;justify-content:space-between;align-items:center;user-select:none}.vue-simple-carousel-container .vsc-controls .vsc-points{display:flex;justify-content:center;flex-wrap:nowrap}.vue-simple-carousel-container .vsc-controls .vsc-points .vsc-point{width:10px;height:10px;border-radius:50%;margin:2px;border:1px solid #000}.vue-simple-carousel-container .vsc-controls .vsc-points .vsc-point.current{background:#000}.vue-simple-carousel-container .vsc-controls .arrow.disabled{display:none}", map: undefined, media: undefined });

  };
  /* scoped */
  var __vue_scope_id__ = undefined;
  /* module identifier */
  var __vue_module_identifier__ = "data-v-719b3a93";
  /* functional template */
  var __vue_is_functional_template__ = false;

  
  var SimpleCarouselContainer$1 = normalizeComponent_1(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    undefined,
    server
  );

var SimpleCarouselItem = /*@__PURE__*/(function (Vue) {
    function SimpleCarouselItem() {
        Vue.apply(this, arguments);
        this.parent = null;
    }

    if ( Vue ) SimpleCarouselItem.__proto__ = Vue;
    SimpleCarouselItem.prototype = Object.create( Vue && Vue.prototype );
    SimpleCarouselItem.prototype.constructor = SimpleCarouselItem;

    var prototypeAccessors = { itemsOnScreen: { configurable: true } };
    prototypeAccessors.itemsOnScreen.get = function () {
        // @ts-ignore
        return this.parent ? this.parent.itemsOnScreen : 1;
    };

    Object.defineProperties( SimpleCarouselItem.prototype, prototypeAccessors );

    return SimpleCarouselItem;
}(Vue));
SimpleCarouselItem = __decorate([
    Component({
        mounted: function mounted() {
            var parent = this.$parent;
            while (true) {
                if (parent.$el && parent.$el.classList.contains('vue-simple-carousel-container')) {
                    this.parent = parent;
                    break;
                }
                if (!parent.$parent) {
                    break;
                }
                parent = parent.$parent;
            }
        }
    })
], SimpleCarouselItem);
var script$1 = SimpleCarouselItem;

/* script */
var __vue_script__$1 = script$1;

/* template */
var __vue_render__$1 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"vue-simple-carousel-item",style:({width: ((100 / _vm.itemsOnScreen) + "%")})},[_vm._t("default")],2)};
var __vue_staticRenderFns__$1 = [];

  /* style */
  var __vue_inject_styles__$1 = undefined;
  /* scoped */
  var __vue_scope_id__$1 = undefined;
  /* module identifier */
  var __vue_module_identifier__$1 = "data-v-67680613";
  /* functional template */
  var __vue_is_functional_template__$1 = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var SimpleCarouselItem$1 = normalizeComponent_1(
    { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
    __vue_inject_styles__$1,
    __vue_script__$1,
    __vue_scope_id__$1,
    __vue_is_functional_template__$1,
    __vue_module_identifier__$1,
    undefined,
    undefined
  );

exports.SimpleCarouselContainer = SimpleCarouselContainer$1;
exports.SimpleCarouselItem = SimpleCarouselItem$1;
